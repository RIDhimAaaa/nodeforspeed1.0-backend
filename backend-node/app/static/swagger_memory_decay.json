{
  "openapi": "3.0.0",
  "info": {
    "title": "Memory Decay Notepad API",
    "description": "REST API for Memory Decay Notepad - Notes decay over time unless reviewed. AI helps you revise. Only attention keeps memory alive.",
    "version": "1.0.0",
    "contact": {
      "name": "Hackathon Team",
      "email": "team@memorydecay.com"
    }
  },
  "servers": [
    {
      "url": "/api",
      "description": "Main API server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {"type": "integer"},
          "username": {"type": "string"},
          "email": {"type": "string"},
          "is_verified": {"type": "boolean"},
          "created_at": {"type": "string", "format": "date-time"}
        }
      },
      "Note": {
        "type": "object",
        "properties": {
          "id": {"type": "integer"},
          "title": {"type": "string"},
          "content": {"type": "string"},
          "decay_minutes": {"type": "integer", "description": "Current decay time in minutes"},
          "original_decay_minutes": {"type": "integer", "description": "Original decay time before penalties"},
          "last_revised": {"type": "string", "format": "date-time"},
          "status": {"type": "string", "enum": ["active", "archived", "revived"]},
          "expires_at": {"type": "string", "format": "date-time"},
          "time_remaining_seconds": {"type": "integer"},
          "is_expired": {"type": "boolean"},
          "ai_summary": {"type": "string"},
          "ai_questions": {"type": "array", "items": {"type": "string"}},
          "wrong_answers_count": {"type": "integer"},
          "penalty_applied": {"type": "boolean"},
          "penalty_percentage": {"type": "number"},
          "created_at": {"type": "string", "format": "date-time"},
          "archived_at": {"type": "string", "format": "date-time"},
          "revived_at": {"type": "string", "format": "date-time"}
        }
      },
      "NoteCreate": {
        "type": "object",
        "required": ["title", "content"],
        "properties": {
          "title": {"type": "string", "maxLength": 200},
          "content": {"type": "string"},
          "decay_minutes": {"type": "integer", "minimum": 1, "maximum": 10080, "default": 1440}
        }
      },
      "PenaltyInfo": {
        "type": "object",
        "properties": {
          "wrong_answers_count": {"type": "integer"},
          "penalty_percentage": {"type": "number"},
          "new_decay_minutes": {"type": "integer"},
          "original_decay_minutes": {"type": "integer"}
        }
      },
      "AIRevisionResponse": {
        "type": "object",
        "properties": {
          "summary": {"type": "string"},
          "questions": {"type": "array", "items": {"type": "string"}},
          "note": {"$ref": "#/components/schemas/Note"},
          "message": {"type": "string"}
        }
      },
      "QuestionAnswer": {
        "type": "object",
        "required": ["question_index", "answer"],
        "properties": {
          "question_index": {"type": "integer", "minimum": 0},
          "answer": {"type": "string"}
        }
      },
      "Stats": {
        "type": "object",
        "properties": {
          "active_notes": {"type": "integer"},
          "archived_notes": {"type": "integer"},
          "revived_notes": {"type": "integer"},
          "total_notes": {"type": "integer"}
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {"type": "string"}
        }
      }
    }
  },
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["username", "email", "password"],
                "properties": {
                  "username": {"type": "string"},
                  "email": {"type": "string", "format": "email"},
                  "password": {"type": "string"}
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                }
              }
            }
          },
          "400": {"description": "Invalid input"},
          "409": {"description": "User already exists"}
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {"type": "string", "format": "email"},
                  "password": {"type": "string"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {"type": "string"},
                    "refresh_token": {"type": "string"},
                    "user": {"$ref": "#/components/schemas/User"}
                  }
                }
              }
            }
          },
          "401": {"description": "Invalid credentials"},
          "403": {"description": "Account not verified"}
        }
      }
    },
    "/notes/": {
      "get": {
        "tags": ["Notes"],
        "summary": "Get all active notes",
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "List of active notes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "notes": {
                      "type": "array",
                      "items": {"$ref": "#/components/schemas/Note"}
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Notes"],
        "summary": "Create a new note",
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/NoteCreate"}
            }
          }
        },
        "responses": {
          "201": {
            "description": "Note created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"},
                    "note": {"$ref": "#/components/schemas/Note"}
                  }
                }
              }
            }
          },
          "400": {"description": "Invalid input"}
        }
      }
    },
    "/notes/{id}": {
      "get": {
        "tags": ["Notes"],
        "summary": "Get specific note (touches timer)",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "200": {
            "description": "Note details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "note": {"$ref": "#/components/schemas/Note"}
                  }
                }
              }
            }
          },
          "404": {"description": "Note not found"}
        }
      },
      "put": {
        "tags": ["Notes"],
        "summary": "Update note content",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {"type": "string"},
                  "content": {"type": "string"},
                  "decay_minutes": {"type": "integer"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Note updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"},
                    "note": {"$ref": "#/components/schemas/Note"}
                  }
                }
              }
            }
          },
          "400": {"description": "Cannot edit archived note"},
          "404": {"description": "Note not found"}
        }
      },
      "delete": {
        "tags": ["Notes"],
        "summary": "Permanently delete a note",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "200": {
            "description": "Note deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                }
              }
            }
          },
          "404": {"description": "Note not found"}
        }
      }
    },
    "/notes/{id}/ai-revision": {
      "post": {
        "tags": ["AI Revision"],
        "summary": "Generate AI summary and questions for revision",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "200": {
            "description": "AI revision content generated",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/AIRevisionResponse"}
              }
            }
          },
          "400": {"description": "Cannot revise archived note"},
          "404": {"description": "Note not found"}
        }
      }
    },
    "/notes/{id}/answer-question": {
      "post": {
        "tags": ["AI Revision"],
        "summary": "Answer a revision question (applies penalties for wrong answers)",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/QuestionAnswer"}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Answer processed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "correct": {"type": "boolean"},
                    "message": {"type": "string"},
                    "note": {"$ref": "#/components/schemas/Note"},
                    "penalty_info": {"$ref": "#/components/schemas/PenaltyInfo"},
                    "feedback": {"type": "string"}
                  }
                }
              }
            }
          },
          "400": {"description": "Invalid input or archived note"},
          "404": {"description": "Note not found"}
        }
      }
    },
    "/notes/{id}/complete-revision": {
      "post": {
        "tags": ["AI Revision"],
        "summary": "Complete revision session with final scoring",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["correct_answers", "total_questions"],
                "properties": {
                  "correct_answers": {"type": "integer"},
                  "total_questions": {"type": "integer"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Revision session completed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "session_complete": {"type": "boolean"},
                    "score": {
                      "type": "object",
                      "properties": {
                        "correct": {"type": "integer"},
                        "total": {"type": "integer"},
                        "percentage": {"type": "number"}
                      }
                    },
                    "note": {"$ref": "#/components/schemas/Note"},
                    "message": {"type": "string"},
                    "bonus_applied": {"type": "boolean"}
                  }
                }
              }
            }
          },
          "400": {"description": "No questions answered"},
          "404": {"description": "Note not found"}
        }
      }
    },
    "/notes/archived": {
      "get": {
        "tags": ["Archived Notes"],
        "summary": "Get all archived (forgotten) notes",
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "List of archived notes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "archived_notes": {
                      "type": "array",
                      "items": {"$ref": "#/components/schemas/Note"}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notes/{id}/revive": {
      "post": {
        "tags": ["Archived Notes"],
        "summary": "Revive archived note by answering question correctly",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/QuestionAnswer"}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Note revived successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"},
                    "note": {"$ref": "#/components/schemas/Note"},
                    "correct_answer": {"type": "boolean"}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Wrong answer - penalty applied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {"type": "string"},
                    "penalty_info": {"$ref": "#/components/schemas/PenaltyInfo"},
                    "note": {"$ref": "#/components/schemas/Note"},
                    "correct_answer": {"type": "boolean"},
                    "hint": {"type": "string"}
                  }
                }
              }
            }
          },
          "404": {"description": "Note not found"}
        }
      }
    },
    "/notes/stats": {
      "get": {
        "tags": ["Statistics"],
        "summary": "Get user's note statistics",
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "User statistics",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "stats": {"$ref": "#/components/schemas/Stats"}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notes/{id}/penalty-info": {
      "get": {
        "tags": ["Penalty System"],
        "summary": "Get detailed penalty information for a note",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "200": {
            "description": "Penalty information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "note_id": {"type": "integer"},
                    "title": {"type": "string"},
                    "wrong_answers_count": {"type": "integer"},
                    "penalty_applied": {"type": "boolean"},
                    "penalty_percentage": {"type": "number"},
                    "original_decay_minutes": {"type": "integer"},
                    "current_decay_minutes": {"type": "integer"},
                    "time_reduction_minutes": {"type": "integer"},
                    "max_penalties_reached": {"type": "boolean"},
                    "next_penalty_reduction": {"type": "number"}
                  }
                }
              }
            }
          },
          "404": {"description": "Note not found"}
        }
      }
    },
    "/notes/{id}/reset-penalties": {
      "post": {
        "tags": ["Penalty System"],
        "summary": "Reset penalties for a note (admin/premium feature)",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "200": {
            "description": "Penalties reset successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"},
                    "note": {"$ref": "#/components/schemas/Note"},
                    "decay_restored_from": {"type": "integer"},
                    "decay_restored_to": {"type": "integer"}
                  }
                }
              }
            }
          },
          "404": {"description": "Note not found"}
        }
      }
    },
    "/notes/batch-archive": {
      "post": {
        "tags": ["Utility"],
        "summary": "Manually trigger archiving of expired notes",
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "Batch archiving completed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"},
                    "archived_count": {"type": "integer"}
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "User registration and login"
    },
    {
      "name": "Notes",
      "description": "CRUD operations for notes with decay system"
    },
    {
      "name": "AI Revision",
      "description": "AI-powered revision and question answering"
    },
    {
      "name": "Archived Notes",
      "description": "Managing forgotten/archived notes"
    },
    {
      "name": "Statistics",
      "description": "User performance and note statistics"
    },
    {
      "name": "Penalty System",
      "description": "Managing penalties for wrong answers"
    },
    {
      "name": "Utility",
      "description": "Utility endpoints"
    }
  ]
}
