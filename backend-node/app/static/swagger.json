{
  "openapi": "3.0.0",
  "info": {
    "title": "Flask Authentication API",
    "description": "Comprehensive REST API for user authentication and management",
    "version": "1.0.0",
    "contact": {
      "name": "API Support",
      "email": "support@example.com"
    }
  },
  
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {"type": "integer"},
          "username": {"type": "string"},
          "email": {"type": "string"},
          "first_name": {"type": "string"},
          "last_name": {"type": "string"},
          "phone": {"type": "string"},
          "is_active": {"type": "boolean"},
          "is_verified": {"type": "boolean"},
          "created_at": {"type": "string", "format": "date-time"},
          "updated_at": {"type": "string", "format": "date-time"}
        }
      },
      "UserRegistration": {
        "type": "object",
        "required": ["username", "email", "password", "first_name", "last_name"],
        "properties": {
          "username": {"type": "string", "minLength": 3},
          "email": {"type": "string", "format": "email"},
          "password": {"type": "string", "minLength": 8},
          "first_name": {"type": "string"},
          "last_name": {"type": "string"},
          "phone": {"type": "string"}
        }
      },
      "UserLogin": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {"type": "string"},
          "password": {"type": "string"}
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {"type": "string"}
        }
      }
    }
  },
  "paths": {
    "/api/auth/signup": {
      "post": {
        "summary": "User Registration",
        "description": "Register a new user account",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/UserRegistration"}
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"},
                    "user": {"$ref": "#/components/schemas/User"},
                    "email_verification_sent": {"type": "boolean"}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Error"}
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "summary": "User Login",
        "description": "Authenticate user and get access tokens",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/UserLogin"}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {"type": "string"},
                    "refresh_token": {"type": "string"},
                    "user": {"$ref": "#/components/schemas/User"}
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Error"}
              }
            }
          }
        }
      }
    },
    "/api/auth/profile": {
      "get": {
        "summary": "Get User Profile",
        "description": "Get authenticated user's profile information",
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "User profile",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {"$ref": "#/components/schemas/User"}
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Error"}
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update User Profile",
        "description": "Update authenticated user's profile information",
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "first_name": {"type": "string"},
                  "last_name": {"type": "string"},
                  "phone": {"type": "string"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/auth/verify-email": {
      "post": {
        "summary": "Verify Email",
        "description": "Verify user's email address with token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "token"],
                "properties": {
                  "email": {"type": "string", "format": "email"},
                  "token": {"type": "string"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email verified successfully"
          },
          "400": {
            "description": "Invalid or expired token"
          }
        }
      }
    },
    "/api/auth/forgot-password": {
      "post": {
        "summary": "Request Password Reset",
        "description": "Request password reset token via email",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email"],
                "properties": {
                  "email": {"type": "string", "format": "email"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reset email sent if user exists"
          }
        }
      }
    },
    "/api/auth/reset-password": {
      "post": {
        "summary": "Reset Password",
        "description": "Reset password using token received via email",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "token", "new_password"],
                "properties": {
                  "email": {"type": "string", "format": "email"},
                  "token": {"type": "string"},
                  "new_password": {"type": "string", "minLength": 8}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successfully"
          },
          "400": {
            "description": "Invalid or expired token"
          }
        }
      }
    },
    "/api/auth/change-password": {
      "post": {
        "summary": "Change Password",
        "description": "Change password for authenticated user",
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["current_password", "new_password"],
                "properties": {
                  "current_password": {"type": "string"},
                  "new_password": {"type": "string", "minLength": 8}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password changed successfully"
          },
          "400": {
            "description": "Invalid current password or weak new password"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/auth/refresh": {
      "post": {
        "summary": "Refresh Access Token",
        "description": "Get new access token using refresh token",
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "New access token generated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {"type": "string"}
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid refresh token"
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "summary": "Logout User",
        "description": "Logout user and blacklist current token",
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "Successfully logged out"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  }
}
